#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç —Ñ–∞–π–ª—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–ø–∫–∏ assets/
"""

import os
import shutil
import sys

def create_directory_structure():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫"""
    directories = [
        'assets',
        'assets/templates',
        'assets/fonts', 
        'assets/badges',
        'assets/avatars',
        'data',
        'logs'
    ]
    
    for directory in directories:
        if not os.path.exists(directory):
            os.makedirs(directory)
            print(f"‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {directory}")
        else:
            print(f"‚úì –ü–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {directory}")

def move_files():
    """–ü–µ—Ä–µ–º–µ—â–∞–µ—Ç —Ñ–∞–π–ª—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–ø–∫–∏"""
    
    # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ (PNG —Ñ–∞–π–ª—ã)
    png_files = [f for f in os.listdir('.') if f.endswith('.png') and 'template' in f.lower()]
    for file in png_files:
        if os.path.exists(file):
            dest = os.path.join('assets', 'templates', file)
            shutil.move(file, dest)
            print(f"‚úì –ü–µ—Ä–µ–º–µ—â–µ–Ω —à–∞–±–ª–æ–Ω: {file} ‚Üí {dest}")
    
    # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —à—Ä–∏—Ñ—Ç–æ–≤ (OTF —Ñ–∞–π–ª—ã)
    otf_files = [f for f in os.listdir('.') if f.endswith('.otf')]
    for file in otf_files:
        if os.path.exists(file):
            dest = os.path.join('assets', 'fonts', file)
            shutil.move(file, dest)
            print(f"‚úì –ü–µ—Ä–µ–º–µ—â–µ–Ω —à—Ä–∏—Ñ—Ç: {file} ‚Üí {dest}")
    
    # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–æ–≤ (JPG —Ñ–∞–π–ª—ã)
    jpg_files = [f for f in os.listdir('.') if f.endswith('.jpg') and 'avatar' in f.lower()]
    for file in jpg_files:
        if os.path.exists(file):
            dest = os.path.join('assets', 'avatars', file)
            shutil.move(file, dest)
            print(f"‚úì –ü–µ—Ä–µ–º–µ—â–µ–Ω –∞–≤–∞—Ç–∞—Ä: {file} ‚Üí {dest}")
    
    # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∑–Ω–∞—á–∫–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ badges
    if os.path.exists('badges'):
        badge_files = [f for f in os.listdir('badges') if f.endswith('.png')]
        for file in badge_files:
            src = os.path.join('badges', file)
            dest = os.path.join('assets', 'badges', file)
            shutil.move(src, dest)
            print(f"‚úì –ü–µ—Ä–µ–º–µ—â–µ–Ω –∑–Ω–∞—á–æ–∫: {file} ‚Üí {dest}")
        
        # –£–¥–∞–ª—è–µ–º –ø—É—Å—Ç—É—é –ø–∞–ø–∫—É badges
        try:
            os.rmdir('badges')
            print("‚úì –£–¥–∞–ª–µ–Ω–∞ –ø—É—Å—Ç–∞—è –ø–∞–ø–∫–∞ badges")
        except:
            print("‚ö† –ü–∞–ø–∫–∞ badges –Ω–µ –ø—É—Å—Ç–∞, –æ—Å—Ç–∞–≤–ª–µ–Ω–∞")

def cleanup_old_files():
    """–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã"""
    old_files = [
        'main.py', 'main2.py', 'db.py', 'config.py', 'config2.py',
        'requirements.txt', 'witch.db', 'hui.json', 'README_REFACTORED.md',
        'run.bat', 'run.sh', '.dockerignore'
    ]
    
    for file in old_files:
        if os.path.exists(file):
            try:
                os.remove(file)
                print(f"‚úì –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª: {file}")
            except Exception as e:
                print(f"‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {file}: {e}")

def create_env_file():
    """–°–æ–∑–¥–∞–µ—Ç .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    if not os.path.exists('.env'):
        if os.path.exists('env.example'):
            shutil.copy('env.example', '.env')
            print("‚úì –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example")
            print("‚ö† –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª, –¥–æ–±–∞–≤–∏–≤ –≤–∞—à Discord —Ç–æ–∫–µ–Ω!")
        else:
            print("‚ö† –§–∞–π–ª env.example –Ω–µ –Ω–∞–π–¥–µ–Ω!")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
        create_directory_structure()
        print()
        
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª—ã
        move_files()
        print()
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
        cleanup_old_files()
        print()
        
        # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
        create_env_file()
        print()
        
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print()
        print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env, –¥–æ–±–∞–≤–∏–≤ –≤–∞—à Discord —Ç–æ–∫–µ–Ω")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ –ø–∞–ø–∫—É assets/")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main.py")
        print()
        print("üê≥ –î–ª—è Docker –∑–∞–ø—É—Å–∫–∞:")
        print("docker-compose up --build")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
